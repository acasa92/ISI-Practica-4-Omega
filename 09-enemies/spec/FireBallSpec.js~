describe("FireBallSpec", function() {

	var canvas, ctx;

	beforeEach(function(){
		loadFixtures('index.html');

		canvas = $('#game')[0];
		expect(canvas).toExist();

		ctx = canvas.getContext('2d');
		expect(ctx).toBeDefined();
	});

	it("FireBallSpec", function() {
		SpriteSheet.map = {fireball: { sx: 0, sy: 64, w: 64, h: 64, frames: 1 } };
		var pm = new PlayerFireball(1,2,1);
		expect(pm.w).toBe(SpriteSheet.map['fireball'].w);
		expect(pm.h).toBe(SpriteSheet.map['fireball'].h);
		expect(pm.x).toBe(1 - SpriteSheet.map['fireball'].w/2);
		expect(pm.y).toBe(2 - SpriteSheet.map['fireball'].h);
		//No compruebo el valor exacto de pm.vy suponiendo 
		//que se puede querer modificar la velocidad
		expect(pm.vy<0).toBe(true);
	});

	it("FireBallSpec.step()", function() {
		var pm = new PlayerFireball(1,1000,1);
		var dummyBoard = { remove: function(obj) {} };
		pm.board = dummyBoard;
		spyOn(dummyBoard, "remove");
	
		//sin salirse de la pantalla
		//var ytemp = pm.y;
		//var dt = 1;
		//while( dt > (-pm.h-pm.y)/pm.vy ) { dt /= 10; }; //independiente de pm.vy
		pm.step(0.1);
		//expect(pm.y).toBe(ytemp + pm.vy*dt);
		expect(dummyBoard.remove).not.toHaveBeenCalled();

		//saliendose de la pantalla
		pm.step(10000);
		//pm.step(1+(-pm.h-pm.y)/pm.vy); //independiente de pm.vy
		expect(dummyBoard.remove).toHaveBeenCalledWith(pm);
	});
/*	
	it("FireBallSpec.draw()", function() {
		var pm = new PlayerMissile(1,2);
		SpriteSheet = { draw: function(ctx, name, x, y) {} };
		octx = {};
		spyOn(SpriteSheet, "draw");
		pm.draw(octx);
		expect(SpriteSheet.draw).toHaveBeenCalledWith(octx,'missile', pm.x, pm.y);
	});
*/
});
